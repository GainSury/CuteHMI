#include "QMLPlugin.hpp"

#include <cutehmi/dataacquisition/internal/common.hpp>
#include <cutehmi/dataacquisition/Schema.hpp>
//#include <cutehmi/dataacquisition/Tag.hpp>
#include <cutehmi/dataacquisition/TagValue.hpp>
#include <cutehmi/dataacquisition/HistoryWriter.hpp>
#include <cutehmi/dataacquisition/EventWriter.hpp>
#include <cutehmi/dataacquisition/RecencyWriter.hpp>

#include <QtQml>

// This file has been initially autogenerated by 'cutehmi.skeleton.cpp' Qbs module.

namespace cutehmi {
namespace dataacquisition {
namespace internal {

void QMLPlugin::registerTypes(const char * uri)
{
	Q_ASSERT(uri == QLatin1String("CuteHMI.DataAcquisition"));

	qmlRegisterType<Schema>(uri, CUTEHMI_DATAACQUISITION_MAJOR, 0, "Schema");
	qmlRegisterType<TagValue>(uri, CUTEHMI_DATAACQUISITION_MAJOR, 0, "TagValue");
	qmlRegisterUncreatableType<AbstractWriter>(uri, CUTEHMI_DATAACQUISITION_MAJOR, 0, "AbstractWriter", "cutehmi::dataacquisition::AbstractWriter instance can not be created from QML.");
	qmlRegisterType<HistoryWriter>(uri, CUTEHMI_DATAACQUISITION_MAJOR, 0, "HistoryWriter");
	qmlRegisterType<RecencyWriter>(uri, CUTEHMI_DATAACQUISITION_MAJOR, 0, "RecencyWriter");
	qmlRegisterType<EventWriter>(uri, CUTEHMI_DATAACQUISITION_MAJOR, 0, "EventWriter");
}

}
}
}

# Copyright (c) 2018, Michal Policht. This file is dually licensed under terms
# of either WTFPL or BEER-WARE LICENSE. You may obtain the copy of WTFPL or 
# BEER-WARE LICENSE by googling, binging, yahooing or downloading it from pirate
# bay. NO WARRANTY.

# This makefile defines variables for required tools and commands used by
# various targets.

# Modify PATH variable to prevent interference with other tools/libraries!

C_DIR := $(patsubst %/,%,$(realpath C:/))

# Target machine triplet.
TARGET_MACHINE := $(shell $(CC) -dumpmachine)

# Build machine triplet.
BUILD_MACHINE := $(TARGET_MACHINE)

# Host machine triplet.
HOST_MACHINE := $(TARGET_MACHINE)

ifeq "$(OS)" "Windows_NT"
  NATIVE_PATH_SEPARATOR := $(join \,)
  NATIVE_EXECUTABLE_SUFFIX := .exe
  NATIVE_IORS = '\r\n'  	# Input/Output Record Separator used by AWK.
else
  NATIVE_PATH_SEPARATOR := /
  NATIVE_EXECUTABLE_SUFFIX :=
  NATIVE_IORS = '\n'		# Input/Output Record Separator used by AWK.
endif


# AWK

AWK = awk

$(AWK):


# Shell and its builtins.

CD = cd
SH = sh

$(CD) $(SH):


# Coreutils

BASENAME = basename
CAT = cat
CUT = cut
CP = cp
DIRNAME = dirname
ECHO = echo
MKDIR = mkdir
MV = mv
RM = rm
TR = tr
SORT = sort
STAT = stat
TOUCH = touch

$(BASENAME) $(CAT) $(CUT) $(CP) $(DIRNAME) $(ECHO) $(MKDIR) $(MV) $(RM) $(TR) \
$(SORT) $(STAT) $(TOUCH):


# Findutils

FIND = find
OLDFIND = oldfind
XARGS = xargs

$(FIND) $(OLDFIND) $(XARGS):


# Grep

GREP = grep

$(GREP):


# Make.

MAKE = make

$(MAKE):

# sed.

SED = sed

$(SED):

# wget.

WGET = wget

$(WGET):


# Qt programs are assumed to be in PATH.

QDOC = qdoc
QMLPLUGINDUMP = qmlplugindump

$(QDOC) $(QMLPLUGINDUMP):


# Doxygen.

ifeq "$(OS)" "Windows_NT"
  DOXYGEN_DIR = $(C_DIR)/Program\ Files/doxygen
else
  DOXYGEN_DIR = /usr
endif
DOXYGEN_BIN_DIR = $(DOXYGEN_DIR)/bin
DOXYGEN = $(DOXYGEN_BIN_DIR)/doxygen$(NATIVE_EXECUTABLE_SUFFIX)

$(DOXYGEN):
	$(info --------------------------------------------------------------------------------)
	$(info Program 'doxygen' not found!)
	$(info Download it from: http://www.stack.nl/~dimitri/doxygen/download.html.)
	$(info If 'doxygen' is installed in custom location, override DOXYGEN_DIR variable.)
	$(info DOXYGEN_DIR = "$(DOXYGEN_DIR)")
	$(error DOXYGEN = $(DOXYGEN) not found)


# Python

ifeq "$(OS)" "Windows_NT"
  PYTHON_DIR = $(C_DIR)/Python
  PYTHON = $(PYTHON_DIR)/python$(NATIVE_EXECUTABLE_SUFFIX)
else
  PYTHON_DIR = /usr/bin
  PYTHON = $(PYTHON_DIR)/python3$(NATIVE_EXECUTABLE_SUFFIX)
endif

$(PYTHON):
	$(info --------------------------------------------------------------------------------)
	$(info Can not locate Python interpreter!)
	$(info You can download it from: https://www.python.org/downloads/.)
	$(info If Python is installed, override PYTHON_DIR variable.)
	$(info PYTHON_DIR = "$(PYTHON_DIR)")
	$(error PYTHON = $(PYTHON) not found)


# Doxyqml.

ifeq "$(OS)" "Windows_NT"
  DOXYQML_DIR = $(PYTHON_DIR)/Scripts
else
  DOXYQML_DIR = /usr/bin
endif
DOXYQML = $(DOXYQML_DIR)/doxyqml

$(DOXYQML): | $(PYTHON)
	$(info --------------------------------------------------------------------------------) || \
	$(info Program 'doxyqml' not found!)
	$(info You can get it from: https://github.com/agateau/doxyqml.)
	$(info If 'doxyqml' is installed, override DOXYQML_DIR variable.)
	$(info DOXYQML_DIR = "$(DOXYQML_DIR)")
	$(error DOXYQML = $(DOXYQML) not found)


# CMake.

ifeq "$(OS)" "Windows_NT"
  CMAKE_DIR = $(C_DIR)/Program\ Files/CMake
else
  CMAKE_DIR = /usr/bin
endif
CMAKE_BIN_DIR = $(CMAKE_DIR)/bin
CMAKE = $(CMAKE_BIN_DIR)/cmake$(NATIVE_EXECUTABLE_SUFFIX)

$(CMAKE):
	$(info --------------------------------------------------------------------------------)
	$(info Program 'cmake' not found!)
	$(info Download it from: https://cmake.org/download/.)
	$(info If 'cmake' is installed in custom location, override CMAKE_DIR variable.)
	$(info CMAKE_DIR = "$(CMAKE_DIR)")
	$(error CMAKE = $(CMAKE) not found)

# Include platform specific toolchain file.
-include $(dir $(abspath $(lastword $(MAKEFILE_LIST))))Makefile.$(BUILD_MACHINE).toolchain


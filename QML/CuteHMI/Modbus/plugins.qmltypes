import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable CuteHMI.Modbus 1.0 QML'

Module {
    dependencies: []
    Component {
        name: "cutehmi::modbus::AbstractDevice"
        prototype: "QObject"
        Property { name: "ir"; type: "cutehmi::modbus::InputRegister"; isList: true; isReadonly: true }
        Property { name: "r"; type: "cutehmi::modbus::HoldingRegister"; isList: true; isReadonly: true }
        Property { name: "ib"; type: "cutehmi::modbus::DiscreteInput"; isList: true; isReadonly: true }
        Property { name: "b"; type: "cutehmi::modbus::Coil"; isList: true; isReadonly: true }
    }
    Component {
        name: "cutehmi::modbus::Client"
        prototype: "cutehmi::modbus::AbstractDevice"
        Signal {
            name: "error"
            Parameter { name: "errInfo"; type: "cutehmi::base::ErrorInfo" }
        }
        Signal { name: "connected" }
        Signal { name: "disconnected" }
        Method { name: "connect" }
        Method { name: "disconnect" }
        Method {
            name: "readAll"
            Parameter { name: "run"; type: "QAtomicInt" }
        }
        Method { name: "readAll" }
    }
    Component {
        name: "cutehmi::modbus::Coil"
        prototype: "QObject"
        exports: ["CuteHMI.Modbus/Coil 1.0"]
        exportMetaObjectRevisions: [0]
        Signal { name: "valueRequested" }
        Signal { name: "valueUpdated" }
        Signal { name: "valueWritten" }
        Method {
            name: "requestValue"
            Parameter { name: "value"; type: "bool" }
        }
        Method {
            name: "updateValue"
            Parameter { name: "value"; type: "bool" }
        }
        Method { name: "value"; type: "bool" }
        Method { name: "requestedValue"; type: "bool" }
        Method { name: "rest" }
        Method { name: "awake" }
        Method { name: "wakeful"; type: "bool" }
        Method { name: "pendingRequests"; type: "int" }
    }
    Component {
        name: "cutehmi::modbus::DiscreteInput"
        prototype: "QObject"
        exports: ["CuteHMI.Modbus/DiscreteInput 1.0"]
        exportMetaObjectRevisions: [0]
        Signal { name: "valueUpdated" }
        Method {
            name: "updateValue"
            Parameter { name: "value"; type: "bool" }
        }
        Method { name: "value"; type: "bool" }
        Method { name: "rest" }
        Method { name: "awake" }
        Method { name: "wakeful"; type: "bool" }
    }
    Component {
        name: "cutehmi::modbus::HoldingRegister"
        prototype: "QObject"
        exports: ["CuteHMI.Modbus/HoldingRegister 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "encoding_t"
            values: {
                "INT16": 0
            }
        }
        Signal { name: "valueRequested" }
        Signal { name: "valueUpdated" }
        Signal { name: "valueWritten" }
        Method {
            name: "requestValue"
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "encoding"; type: "encoding_t" }
        }
        Method {
            name: "requestValue"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "updateValue"
            Parameter { name: "value"; type: "uint16_t" }
        }
        Method {
            name: "value"
            type: "QVariant"
            Parameter { name: "encoding"; type: "encoding_t" }
        }
        Method { name: "value"; type: "QVariant" }
        Method { name: "requestedValue"; type: "uint16_t" }
        Method { name: "rest" }
        Method { name: "awake" }
        Method { name: "wakeful"; type: "bool" }
        Method { name: "pendingRequests"; type: "int" }
    }
    Component {
        name: "cutehmi::modbus::InputRegister"
        prototype: "QObject"
        exports: ["CuteHMI.Modbus/InputRegister 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "encoding_t"
            values: {
                "INT16": 0
            }
        }
        Signal { name: "valueUpdated" }
        Method {
            name: "updateValue"
            Parameter { name: "value"; type: "uint16_t" }
        }
        Method {
            name: "value"
            type: "QVariant"
            Parameter { name: "encoding"; type: "encoding_t" }
        }
        Method { name: "value"; type: "QVariant" }
        Method { name: "rest" }
        Method { name: "awake" }
        Method { name: "wakeful"; type: "bool" }
    }
    Component {
        name: "cutehmi::modbus::qml::CoilController"
        prototype: "QObject"
        exports: ["CuteHMI.Modbus/CoilController 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "device"; type: "AbstractDevice"; isPointer: true }
        Property { name: "address"; type: "int" }
        Property { name: "value"; type: "bool" }
        Property { name: "busy"; type: "bool"; isReadonly: true }
        Signal { name: "valueUpdated" }
    }
    Component {
        name: "cutehmi::modbus::qml::DiscreteInputController"
        prototype: "QObject"
        exports: ["CuteHMI.Modbus/DiscreteInputController 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "device"; type: "AbstractDevice"; isPointer: true }
        Property { name: "address"; type: "int" }
        Property { name: "value"; type: "bool"; isReadonly: true }
        Property { name: "busy"; type: "bool"; isReadonly: true }
        Signal { name: "valueUpdated" }
    }
    Component {
        name: "cutehmi::modbus::qml::HoldingRegisterController"
        prototype: "QObject"
        exports: ["CuteHMI.Modbus/HoldingRegisterController 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "device"; type: "AbstractDevice"; isPointer: true }
        Property { name: "address"; type: "int" }
        Property { name: "value"; type: "double" }
        Property { name: "valueScale"; type: "double" }
        Property { name: "encoding"; type: "HoldingRegister::encoding_t" }
        Property { name: "busy"; type: "bool"; isReadonly: true }
        Signal { name: "valueUpdated" }
    }
    Component {
        name: "cutehmi::modbus::qml::InputRegisterController"
        prototype: "QObject"
        exports: ["CuteHMI.Modbus/InputRegisterController 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "device"; type: "AbstractDevice"; isPointer: true }
        Property { name: "address"; type: "int" }
        Property { name: "value"; type: "double"; isReadonly: true }
        Property { name: "valueScale"; type: "double" }
        Property { name: "encoding"; type: "InputRegister::encoding_t" }
        Property { name: "busy"; type: "bool"; isReadonly: true }
        Signal { name: "valueUpdated" }
    }
}

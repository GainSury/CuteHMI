import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable CuteHMI.Stupid 1.0 QML'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "cutehmi::stupid::DS18B20"
        prototype: "QObject"
        exports: ["CuteHMI.Stupid/DS18B20 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "valueType_t"
            values: {
                "PLUGGED": 1,
                "TEMPERATURE": 2,
                "CRC": 4,
                "CRC_OK": 8,
                "TIMESTAMP": 16,
                "EXPIRE": 32
            }
        }
        Enum {
            name: "error_t"
            values: {
                "ERROR_OK": 0,
                "ERROR_UNPLUGGED": 1,
                "ERROR_WRONG_CRC": 2,
                "ERROR_DATA_STALL": 4
            }
        }
        Property { name: "error"; type: "int"; isReadonly: true }
        Signal {
            name: "valueUpdated"
            Parameter { name: "valueTypes"; type: "int" }
        }
        Method {
            name: "updateData"
            Parameter { name: "data"; type: "Data" }
        }
        Method { name: "temperature"; type: "int" }
        Method { name: "plugged"; type: "bool" }
        Method { name: "crc"; type: "int" }
        Method { name: "timestamp"; type: "QDateTime" }
        Method { name: "rest" }
        Method { name: "awake" }
        Method { name: "wakeful"; type: "bool" }
    }
    Component {
        name: "cutehmi::stupid::DS18B20History"
        prototype: "QObject"
        exports: ["CuteHMI.Stupid/DS18B20History 1.0"]
        exportMetaObjectRevisions: [0]
        Property {
            name: "series"
            type: "cutehmi::charts::PointSeries"
            isReadonly: true
            isPointer: true
        }
        Property { name: "from"; type: "qlonglong" }
        Property { name: "to"; type: "qlonglong" }
        Property { name: "minimum"; type: "qlonglong"; isReadonly: true }
        Property { name: "maximum"; type: "qlonglong"; isReadonly: true }
        Property { name: "updating"; type: "bool"; isReadonly: true }
        Method { name: "requestUpdate"; type: "bool" }
    }
}

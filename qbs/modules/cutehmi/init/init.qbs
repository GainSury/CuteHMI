import qbs
import qbs.TextFile
import qbs.Environment

Module {
	property string initializerClass	//@todo rename to initClass and use cutehmi.conventions

	property string initializerHeader: initializerClass ? initializerClass.replace(/::/g, '\/') + ".hpp" : ""

	PropertyOptions {
		name: "artifacts"
		description: "Whether to generate any artifacts."
	}
	property bool artifacts: true

	property path initCppArtifact: artifacts ? "cutehmi.init.cpp" : undefined

	Rule {
		condition: initCppArtifact !== undefined
		multiplex: true

		prepare: {
			var cppCmd = new JavaScriptCommand();
			cppCmd.description = "generating " + output.filePath
			cppCmd.highlight = "codegen";
			cppCmd.sourceCode = function() {
				var f = new TextFile(output.filePath, TextFile.WriteOnly);
				try {
					var prefix = "CUTEHMI_INIT"

					f.writeLine("#ifndef " + prefix + "_HPP")
					f.writeLine("#define " + prefix + "_HPP")

					f.writeLine("")
					f.writeLine("// This file has been autogenerated by 'cutehmi.init' Qbs module.")
					f.writeLine("")

					if (!product.cutehmi.init.initializerHeader) {
						console.error("Value of 'cutehmi.init.initializerHeader' property has not been defined by product '" + product.name + "'!")
						f.writeLine("// Value of 'cutehmi.init.initializerHeader' property has not been defined by product '" + product.name + "'!")
					} else
						f.writeLine("#include <" + product.cutehmi.init.initializerHeader + "> // Specified by 'cutehmi.init.initializerHeader'.")

					f.writeLine("")

					if (!product.cutehmi.init.initializerClass) {
						console.error("Value of 'cutehmi.init.initializerClass' property has not been defined by product '" + product.name + "'!")
						f.writeLine("// Value of 'cutehmi.init.initializerClass' property has not been defined by product '" + product.name + "'!")
					} else {
						f.writeLine("namespace {")
						f.writeLine("	" + product.cutehmi.init.initializerClass + " init; // Specified by 'cutehmi.init.initializerClass'.")
						f.writeLine("}")
					}

					f.writeLine("")
					f.writeLine("#endif")
				} finally {
					f.close()
				}
			}

			return [cppCmd]
		}

		Artifact {
			filePath: product.cutehmi.init.initCppArtifact
			fileTags: ["cpp"]
		}
	}
}

//(c)C: Copyright © 2019, Michał Policht <michal@policht.pl>. All rights reserved.
//(c)C: This file is a part of CuteHMI.
//(c)C: CuteHMI is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
//(c)C: CuteHMI is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
//(c)C: You should have received a copy of the GNU Lesser General Public License along with CuteHMI.  If not, see <https://www.gnu.org/licenses/>.

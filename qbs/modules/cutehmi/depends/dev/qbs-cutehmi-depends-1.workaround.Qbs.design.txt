Problem:

We need to define a macro that would denote required minor version number of imported module. Normally this is done using 'cpp' module and its 'cpp.defines' property. Ideally a macro would be defined by imported module within its 'Export' item. Unfortunatelly, it seems there's currently no way (or it is undocummented) to pass parameter from importing module to imported module's 'Export' item via 'Depends' item, so that 'Export' item in imported module could obtain the required minor version number parameter and act accordingly. 

Dependency parameters seem to work only within 'Rule' item and only within 'prepare' property. 

Another possible solution would be to extend 'Depends' item, add custom property and use 'cpp.defines' within it, but 'Depends' items can not contain 'Depend' items themselves, thuis is is not possible.

'Scanner' item could collect dependencies from some predefined array, but it also doesn't seem to work as expected.

Workaround:

A workaround is to use 'reqMinor' property instead of dependency parameters. Property 'reqMinor' is provided by 'Export' item belonging
to 'cutehmi.Module'.

Snippet:

```qml
Depends { name: "cutehmi_xml_1"; cutehmi.depends.reqMinor: 0 }
```

Above code has to be replaced by the code below.

```qml
Depends { name: "cutehmi_xml_1" } cutehmi_xml_1.reqMinor: 0
```

